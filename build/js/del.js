'use strict';

$(document).ready(function () {
    //Search Hint
    if ($('.js-search-input').length > 0) {
        var $searchInput = $('.js-search-input');
        $searchInput.on('keyup', function () {
            var $hint = $(this).closest('.js-search').find('.search__hint');
            if ($(this).val() !== '') {
                $hint.show();
            } else {
                $hint.hide();
            }
        });
    }

    //Card Adress Map
    if ($('#contacts-map').length > 0) {
        var init = function init() {
            myMap = new ymaps.Map('contacts-map', {
                center: [55.73226853, 37.6209191],
                zoom: 16
            });

            myMap.behaviors.disable(['scrollZoom']);

            myMap.controls.remove('searchControl').remove('typeSelector').add('routeEditor');

            myPin = new ymaps.GeoObjectCollection({}, {
                iconLayout: 'default#image',
                iconImageHref: 'img/general/map-pin.svg',
                iconImageSize: [30, 42],
                iconImageOffset: [-3, -42]
            });

            myPlacemark = new ymaps.Placemark([55.73226853, 37.6209191], {
                balloonContentHeader: '<span class="map-pin__title">BAZAAR-TEX</span>',
                balloonContentBody: '<span class="map-pin__place">ул. Большая Полянка, 51А/9, Московский р-н</span>'
            });

            myPin.add(myPlacemark);
            myMap.geoObjects.add(myPin);
        };

        ymaps.ready(init);
        var myMap, myPlacemark, myPin;
    }

    //Price Slider
    if ($('.js-catalog-filter-item-price').length > 0) {
        var slider = document.getElementById('js-catalog-filter-slider');
        var allPriceStart = $('#js-catalog-filter-slider').data('start');
        var allPriceEnd = $('#js-catalog-filter-slider').data('end');
        var spans = [$('#jsPriceStart'), $('#jsPriceEnd')];
        var startPrice;
        var endPrice;

        if (spans[0].text() == '') {
            startPrice = allPriceStart;
        } else {
            startPrice = parseInt(spans[0].text());
        }

        if (spans[1].text() == '') {
            endPrice = allPriceEnd;
        } else {
            endPrice = parseInt(spans[1].text());
        }

        noUiSlider.create(slider, {
            start: [startPrice, endPrice],
            connect: true,
            range: {
                min: allPriceStart,
                max: allPriceEnd
            }
        });
        slider.noUiSlider.on('update', function (values, handle) {
            spans[handle].text(values[handle]);
        });
    }
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlbC5qcyJdLCJuYW1lcyI6WyIkIiwiZG9jdW1lbnQiLCJyZWFkeSIsImxlbmd0aCIsIiRzZWFyY2hJbnB1dCIsIm9uIiwiJGhpbnQiLCJjbG9zZXN0IiwiZmluZCIsInZhbCIsInNob3ciLCJoaWRlIiwiaW5pdCIsIm15TWFwIiwieW1hcHMiLCJNYXAiLCJjZW50ZXIiLCJ6b29tIiwiYmVoYXZpb3JzIiwiZGlzYWJsZSIsImNvbnRyb2xzIiwicmVtb3ZlIiwiYWRkIiwibXlQaW4iLCJHZW9PYmplY3RDb2xsZWN0aW9uIiwiaWNvbkxheW91dCIsImljb25JbWFnZUhyZWYiLCJpY29uSW1hZ2VTaXplIiwiaWNvbkltYWdlT2Zmc2V0IiwibXlQbGFjZW1hcmsiLCJQbGFjZW1hcmsiLCJiYWxsb29uQ29udGVudEhlYWRlciIsImJhbGxvb25Db250ZW50Qm9keSIsImdlb09iamVjdHMiLCJzbGlkZXIiLCJnZXRFbGVtZW50QnlJZCIsImFsbFByaWNlU3RhcnQiLCJkYXRhIiwiYWxsUHJpY2VFbmQiLCJzcGFucyIsInN0YXJ0UHJpY2UiLCJlbmRQcmljZSIsInRleHQiLCJwYXJzZUludCIsIm5vVWlTbGlkZXIiLCJjcmVhdGUiLCJzdGFydCIsImNvbm5lY3QiLCJyYW5nZSIsIm1pbiIsIm1heCIsInZhbHVlcyIsImhhbmRsZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsRUFBRUMsUUFBRixFQUFZQyxLQUFaLENBQWtCLFlBQVc7QUFDekI7QUFDQSxRQUFJRixFQUFFLGtCQUFGLEVBQXNCRyxNQUF0QixHQUErQixDQUFuQyxFQUFzQztBQUNsQyxZQUFJQyxlQUFlSixFQUFFLGtCQUFGLENBQW5CO0FBQ0FJLHFCQUFhQyxFQUFiLENBQWdCLE9BQWhCLEVBQXlCLFlBQVc7QUFDaEMsZ0JBQUlDLFFBQVFOLEVBQUUsSUFBRixFQUNQTyxPQURPLENBQ0MsWUFERCxFQUVQQyxJQUZPLENBRUYsZUFGRSxDQUFaO0FBR0EsZ0JBQUlSLEVBQUUsSUFBRixFQUFRUyxHQUFSLE9BQWtCLEVBQXRCLEVBQTBCO0FBQ3RCSCxzQkFBTUksSUFBTjtBQUNILGFBRkQsTUFFTztBQUNISixzQkFBTUssSUFBTjtBQUNIO0FBQ0osU0FURDtBQVVIOztBQUVEO0FBQ0EsUUFBSVgsRUFBRSxlQUFGLEVBQW1CRyxNQUFuQixHQUE0QixDQUFoQyxFQUFtQztBQUFBLFlBSXRCUyxJQUpzQixHQUkvQixTQUFTQSxJQUFULEdBQWdCO0FBQ1pDLG9CQUFRLElBQUlDLE1BQU1DLEdBQVYsQ0FBYyxjQUFkLEVBQThCO0FBQ2xDQyx3QkFBUSxDQUFDLFdBQUQsRUFBYyxVQUFkLENBRDBCO0FBRWxDQyxzQkFBTTtBQUY0QixhQUE5QixDQUFSOztBQUtBSixrQkFBTUssU0FBTixDQUFnQkMsT0FBaEIsQ0FBd0IsQ0FBQyxZQUFELENBQXhCOztBQUVBTixrQkFBTU8sUUFBTixDQUNLQyxNQURMLENBQ1ksZUFEWixFQUVLQSxNQUZMLENBRVksY0FGWixFQUdLQyxHQUhMLENBR1MsYUFIVDs7QUFLQUMsb0JBQVEsSUFBSVQsTUFBTVUsbUJBQVYsQ0FDSixFQURJLEVBRUo7QUFDSUMsNEJBQVksZUFEaEI7QUFFSUMsK0JBQWUseUJBRm5CO0FBR0lDLCtCQUFlLENBQUMsRUFBRCxFQUFLLEVBQUwsQ0FIbkI7QUFJSUMsaUNBQWlCLENBQUMsQ0FBQyxDQUFGLEVBQUssQ0FBQyxFQUFOO0FBSnJCLGFBRkksQ0FBUjs7QUFVQUMsMEJBQWMsSUFBSWYsTUFBTWdCLFNBQVYsQ0FBb0IsQ0FBQyxXQUFELEVBQWMsVUFBZCxDQUFwQixFQUErQztBQUN6REMsc0NBQ0ksZ0RBRnFEO0FBR3pEQyxvQ0FDSTtBQUpxRCxhQUEvQyxDQUFkOztBQU9BVCxrQkFBTUQsR0FBTixDQUFVTyxXQUFWO0FBQ0FoQixrQkFBTW9CLFVBQU4sQ0FBaUJYLEdBQWpCLENBQXFCQyxLQUFyQjtBQUNILFNBcEM4Qjs7QUFDL0JULGNBQU1aLEtBQU4sQ0FBWVUsSUFBWjtBQUNBLFlBQUlDLEtBQUosRUFBV2dCLFdBQVgsRUFBd0JOLEtBQXhCO0FBbUNIOztBQUVEO0FBQ0EsUUFBSXZCLEVBQUUsK0JBQUYsRUFBbUNHLE1BQW5DLEdBQTRDLENBQWhELEVBQW1EO0FBQy9DLFlBQUkrQixTQUFTakMsU0FBU2tDLGNBQVQsQ0FBd0IsMEJBQXhCLENBQWI7QUFDQSxZQUFJQyxnQkFBZ0JwQyxFQUFFLDJCQUFGLEVBQStCcUMsSUFBL0IsQ0FBb0MsT0FBcEMsQ0FBcEI7QUFDQSxZQUFJQyxjQUFjdEMsRUFBRSwyQkFBRixFQUErQnFDLElBQS9CLENBQW9DLEtBQXBDLENBQWxCO0FBQ0EsWUFBSUUsUUFBUSxDQUFDdkMsRUFBRSxlQUFGLENBQUQsRUFBcUJBLEVBQUUsYUFBRixDQUFyQixDQUFaO0FBQ0EsWUFBSXdDLFVBQUo7QUFDQSxZQUFJQyxRQUFKOztBQUVBLFlBQUlGLE1BQU0sQ0FBTixFQUFTRyxJQUFULE1BQW1CLEVBQXZCLEVBQTJCO0FBQ3ZCRix5QkFBYUosYUFBYjtBQUNILFNBRkQsTUFFTztBQUNISSx5QkFBYUcsU0FBU0osTUFBTSxDQUFOLEVBQVNHLElBQVQsRUFBVCxDQUFiO0FBQ0g7O0FBRUQsWUFBSUgsTUFBTSxDQUFOLEVBQVNHLElBQVQsTUFBbUIsRUFBdkIsRUFBMkI7QUFDdkJELHVCQUFXSCxXQUFYO0FBQ0gsU0FGRCxNQUVPO0FBQ0hHLHVCQUFXRSxTQUFTSixNQUFNLENBQU4sRUFBU0csSUFBVCxFQUFULENBQVg7QUFDSDs7QUFFREUsbUJBQVdDLE1BQVgsQ0FBa0JYLE1BQWxCLEVBQTBCO0FBQ3RCWSxtQkFBTyxDQUFDTixVQUFELEVBQWFDLFFBQWIsQ0FEZTtBQUV0Qk0scUJBQVMsSUFGYTtBQUd0QkMsbUJBQU87QUFDSEMscUJBQUtiLGFBREY7QUFFSGMscUJBQUtaO0FBRkY7QUFIZSxTQUExQjtBQVFBSixlQUFPVSxVQUFQLENBQWtCdkMsRUFBbEIsQ0FBcUIsUUFBckIsRUFBK0IsVUFBUzhDLE1BQVQsRUFBaUJDLE1BQWpCLEVBQXlCO0FBQ3BEYixrQkFBTWEsTUFBTixFQUFjVixJQUFkLENBQW1CUyxPQUFPQyxNQUFQLENBQW5CO0FBQ0gsU0FGRDtBQUdIO0FBQ0osQ0F6RkQiLCJmaWxlIjoiZGVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7XG4gICAgLy9TZWFyY2ggSGludFxuICAgIGlmICgkKCcuanMtc2VhcmNoLWlucHV0JykubGVuZ3RoID4gMCkge1xuICAgICAgICB2YXIgJHNlYXJjaElucHV0ID0gJCgnLmpzLXNlYXJjaC1pbnB1dCcpO1xuICAgICAgICAkc2VhcmNoSW5wdXQub24oJ2tleXVwJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgJGhpbnQgPSAkKHRoaXMpXG4gICAgICAgICAgICAgICAgLmNsb3Nlc3QoJy5qcy1zZWFyY2gnKVxuICAgICAgICAgICAgICAgIC5maW5kKCcuc2VhcmNoX19oaW50Jyk7XG4gICAgICAgICAgICBpZiAoJCh0aGlzKS52YWwoKSAhPT0gJycpIHtcbiAgICAgICAgICAgICAgICAkaGludC5zaG93KCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICRoaW50LmhpZGUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy9DYXJkIEFkcmVzcyBNYXBcbiAgICBpZiAoJCgnI2NvbnRhY3RzLW1hcCcpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgeW1hcHMucmVhZHkoaW5pdCk7XG4gICAgICAgIHZhciBteU1hcCwgbXlQbGFjZW1hcmssIG15UGluO1xuXG4gICAgICAgIGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgICAgICAgICBteU1hcCA9IG5ldyB5bWFwcy5NYXAoJ2NvbnRhY3RzLW1hcCcsIHtcbiAgICAgICAgICAgICAgICBjZW50ZXI6IFs1NS43MzIyNjg1MywgMzcuNjIwOTE5MV0sXG4gICAgICAgICAgICAgICAgem9vbTogMTZcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBteU1hcC5iZWhhdmlvcnMuZGlzYWJsZShbJ3Njcm9sbFpvb20nXSk7XG5cbiAgICAgICAgICAgIG15TWFwLmNvbnRyb2xzXG4gICAgICAgICAgICAgICAgLnJlbW92ZSgnc2VhcmNoQ29udHJvbCcpXG4gICAgICAgICAgICAgICAgLnJlbW92ZSgndHlwZVNlbGVjdG9yJylcbiAgICAgICAgICAgICAgICAuYWRkKCdyb3V0ZUVkaXRvcicpO1xuXG4gICAgICAgICAgICBteVBpbiA9IG5ldyB5bWFwcy5HZW9PYmplY3RDb2xsZWN0aW9uKFxuICAgICAgICAgICAgICAgIHt9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgaWNvbkxheW91dDogJ2RlZmF1bHQjaW1hZ2UnLFxuICAgICAgICAgICAgICAgICAgICBpY29uSW1hZ2VIcmVmOiAnaW1nL2dlbmVyYWwvbWFwLXBpbi5zdmcnLFxuICAgICAgICAgICAgICAgICAgICBpY29uSW1hZ2VTaXplOiBbMzAsIDQyXSxcbiAgICAgICAgICAgICAgICAgICAgaWNvbkltYWdlT2Zmc2V0OiBbLTMsIC00Ml1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICBteVBsYWNlbWFyayA9IG5ldyB5bWFwcy5QbGFjZW1hcmsoWzU1LjczMjI2ODUzLCAzNy42MjA5MTkxXSwge1xuICAgICAgICAgICAgICAgIGJhbGxvb25Db250ZW50SGVhZGVyOlxuICAgICAgICAgICAgICAgICAgICAnPHNwYW4gY2xhc3M9XCJtYXAtcGluX190aXRsZVwiPkJBWkFBUi1URVg8L3NwYW4+JyxcbiAgICAgICAgICAgICAgICBiYWxsb29uQ29udGVudEJvZHk6XG4gICAgICAgICAgICAgICAgICAgICc8c3BhbiBjbGFzcz1cIm1hcC1waW5fX3BsYWNlXCI+0YPQuy4g0JHQvtC70YzRiNCw0Y8g0J/QvtC70Y/QvdC60LAsIDUx0JAvOSwg0JzQvtGB0LrQvtCy0YHQutC40Lkg0YAt0L08L3NwYW4+J1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIG15UGluLmFkZChteVBsYWNlbWFyayk7XG4gICAgICAgICAgICBteU1hcC5nZW9PYmplY3RzLmFkZChteVBpbik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvL1ByaWNlIFNsaWRlclxuICAgIGlmICgkKCcuanMtY2F0YWxvZy1maWx0ZXItaXRlbS1wcmljZScpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgdmFyIHNsaWRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqcy1jYXRhbG9nLWZpbHRlci1zbGlkZXInKTtcbiAgICAgICAgdmFyIGFsbFByaWNlU3RhcnQgPSAkKCcjanMtY2F0YWxvZy1maWx0ZXItc2xpZGVyJykuZGF0YSgnc3RhcnQnKTtcbiAgICAgICAgdmFyIGFsbFByaWNlRW5kID0gJCgnI2pzLWNhdGFsb2ctZmlsdGVyLXNsaWRlcicpLmRhdGEoJ2VuZCcpO1xuICAgICAgICB2YXIgc3BhbnMgPSBbJCgnI2pzUHJpY2VTdGFydCcpLCAkKCcjanNQcmljZUVuZCcpXTtcbiAgICAgICAgdmFyIHN0YXJ0UHJpY2U7XG4gICAgICAgIHZhciBlbmRQcmljZTtcblxuICAgICAgICBpZiAoc3BhbnNbMF0udGV4dCgpID09ICcnKSB7XG4gICAgICAgICAgICBzdGFydFByaWNlID0gYWxsUHJpY2VTdGFydDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHN0YXJ0UHJpY2UgPSBwYXJzZUludChzcGFuc1swXS50ZXh0KCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHNwYW5zWzFdLnRleHQoKSA9PSAnJykge1xuICAgICAgICAgICAgZW5kUHJpY2UgPSBhbGxQcmljZUVuZDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGVuZFByaWNlID0gcGFyc2VJbnQoc3BhbnNbMV0udGV4dCgpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIG5vVWlTbGlkZXIuY3JlYXRlKHNsaWRlciwge1xuICAgICAgICAgICAgc3RhcnQ6IFtzdGFydFByaWNlLCBlbmRQcmljZV0sXG4gICAgICAgICAgICBjb25uZWN0OiB0cnVlLFxuICAgICAgICAgICAgcmFuZ2U6IHtcbiAgICAgICAgICAgICAgICBtaW46IGFsbFByaWNlU3RhcnQsXG4gICAgICAgICAgICAgICAgbWF4OiBhbGxQcmljZUVuZFxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgc2xpZGVyLm5vVWlTbGlkZXIub24oJ3VwZGF0ZScsIGZ1bmN0aW9uKHZhbHVlcywgaGFuZGxlKSB7XG4gICAgICAgICAgICBzcGFuc1toYW5kbGVdLnRleHQodmFsdWVzW2hhbmRsZV0pO1xuICAgICAgICB9KTtcbiAgICB9XG59KTtcbiJdfQ==
